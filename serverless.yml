service: serverless-s3-go

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
      Resource: "arn:aws:s3:::*"
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"

custom:
  defaultStage: dev

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
  create:
    handler: bin/create
    events:
      - http:
          path: func
          method: post
          cors: true
    environment:
      IMAGE_META_DATA_TABLE:
        Ref: ImageMetaDataTable
      SEQUENCE_TABLE:
        Ref: SequenceTable

#functions:
#  create:
#    handler: bin/create
#    events:
#      - s3:
#        bucket: gakustestbuckets
#        event: s3:ObjectCreated:*

resources:
  Resources:
    resize:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: gakustestbuckets2
    ImageMetaDataTable:
      Type: 'AWS::DynamoDB::Table'
      #DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: ID
            AttributeType: N
        KeySchema:
          -
            AttributeName: ID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    SequenceTable:
      Type: 'AWS::DynamoDB::Table'
      #DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: TableName
            AttributeType: S
        KeySchema:
          -
            AttributeName: TableName
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
